// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pustok.App.DAL.Context;

#nullable disable

namespace Pustok.App.Migrations
{
    [DbContext(typeof(PustokDbContext))]
    partial class PustokDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pustok.App.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "J.K. Rowling"
                        },
                        new
                        {
                            Id = 2,
                            Name = "George R.R. Martin"
                        },
                        new
                        {
                            Id = 3,
                            Name = "J.R.R. Tolkien"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Stephen King"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Agatha Christie"
                        });
                });

            modelBuilder.Entity("Pustok.App.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("HoverImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<string>("MainImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockCount")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("GenreId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Code = "HP1",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A young boy discovers he is a wizard and attends Hogwarts School of Witchcraft and Wizardry.",
                            DiscountPercentage = 0m,
                            GenreId = 1,
                            HoverImageUrl = "product-details-1.jpg",
                            IsFeatured = true,
                            IsNew = true,
                            MainImageUrl = "product-1.jpg",
                            Price = 10.99m,
                            StockCount = 10,
                            Title = "Harry Potter and the Sorcerer's Stone"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Code = "GOT1",
                            CreatedAt = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Noble families vie for control of the Iron Throne in the land of Westeros.",
                            DiscountPercentage = 5m,
                            GenreId = 1,
                            HoverImageUrl = "product-details-2.jpg",
                            IsFeatured = false,
                            IsNew = true,
                            MainImageUrl = "product-2.jpg",
                            Price = 11.99m,
                            StockCount = 8,
                            Title = "A Game of Thrones"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            Code = "HOBBIT",
                            CreatedAt = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bilbo Baggins embarks on a quest to reclaim a lost Dwarf Kingdom from a dragon.",
                            DiscountPercentage = 10m,
                            GenreId = 2,
                            HoverImageUrl = "product-details-3.jpg",
                            IsFeatured = true,
                            IsNew = false,
                            MainImageUrl = "product-3.jpg",
                            Price = 12.99m,
                            StockCount = 12,
                            Title = "The Hobbit"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            Code = "SHINING",
                            CreatedAt = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A family heads to an isolated hotel for the winter where a sinister presence the father violence.",
                            DiscountPercentage = 0m,
                            GenreId = 2,
                            HoverImageUrl = "product-details-4.jpg",
                            IsFeatured = false,
                            IsNew = false,
                            MainImageUrl = "product-4.jpg",
                            Price = 13.99m,
                            StockCount = 7,
                            Title = "The Shining"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 5,
                            Code = "MOTOE",
                            CreatedAt = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Detective Hercule Poirot investigates a murder on a snowbound train.",
                            DiscountPercentage = 15m,
                            GenreId = 3,
                            HoverImageUrl = "product-details-5.jpg",
                            IsFeatured = true,
                            IsNew = true,
                            MainImageUrl = "product-5.jpg",
                            Price = 14.99m,
                            StockCount = 9,
                            Title = "Murder on the Orient Express"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 1,
                            Code = "HP2",
                            CreatedAt = new DateTime(2024, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Harry returns for his second year at Hogwarts and faces new dangers.",
                            DiscountPercentage = 0m,
                            GenreId = 1,
                            HoverImageUrl = "product-details-1.jpg",
                            IsFeatured = false,
                            IsNew = false,
                            MainImageUrl = "product-6.jpg",
                            Price = 15.99m,
                            StockCount = 10,
                            Title = "Harry Potter and the Chamber of Secrets"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 2,
                            Code = "GOT2",
                            CreatedAt = new DateTime(2024, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The Seven Kingdoms are plagued by civil war as rival claimants to the Iron Throne emerge.",
                            DiscountPercentage = 5m,
                            GenreId = 1,
                            HoverImageUrl = "product-details-2.jpg",
                            IsFeatured = true,
                            IsNew = true,
                            MainImageUrl = "product-7.jpg",
                            Price = 16.99m,
                            StockCount = 6,
                            Title = "A Clash of Kings"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 3,
                            Code = "LOTR1",
                            CreatedAt = new DateTime(2024, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Frodo Baggins sets out on a journey to destroy the One Ring.",
                            DiscountPercentage = 10m,
                            GenreId = 2,
                            HoverImageUrl = "product-details-3.jpg",
                            IsFeatured = false,
                            IsNew = false,
                            MainImageUrl = "product-8.jpg",
                            Price = 17.99m,
                            StockCount = 11,
                            Title = "The Lord of the Rings: The Fellowship of the Ring"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 4,
                            Code = "CARRIE",
                            CreatedAt = new DateTime(2024, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A bullied high school girl discovers her telekinetic powers with tragic results.",
                            DiscountPercentage = 0m,
                            GenreId = 2,
                            HoverImageUrl = "product-details-4.jpg",
                            IsFeatured = true,
                            IsNew = true,
                            MainImageUrl = "product-9.jpg",
                            Price = 18.99m,
                            StockCount = 5,
                            Title = "Carrie"
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 5,
                            Code = "ATTWN",
                            CreatedAt = new DateTime(2024, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ten strangers are invited to an island, where they are killed one by one.",
                            DiscountPercentage = 15m,
                            GenreId = 3,
                            HoverImageUrl = "product-details-5.jpg",
                            IsFeatured = false,
                            IsNew = false,
                            MainImageUrl = "product-10.jpg",
                            Price = 19.99m,
                            StockCount = 8,
                            Title = "And Then There Were None"
                        });
                });

            modelBuilder.Entity("Pustok.App.Models.BookImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("BookImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            ImageUrl = "product-1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            ImageUrl = "product-2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            BookId = 3,
                            ImageUrl = "product-3.jpg"
                        },
                        new
                        {
                            Id = 4,
                            BookId = 4,
                            ImageUrl = "product-4.jpg"
                        },
                        new
                        {
                            Id = 5,
                            BookId = 5,
                            ImageUrl = "product-5.jpg"
                        },
                        new
                        {
                            Id = 6,
                            BookId = 6,
                            ImageUrl = "product-6.jpg"
                        },
                        new
                        {
                            Id = 7,
                            BookId = 7,
                            ImageUrl = "product-7.jpg"
                        },
                        new
                        {
                            Id = 8,
                            BookId = 8,
                            ImageUrl = "product-8.jpg"
                        },
                        new
                        {
                            Id = 9,
                            BookId = 9,
                            ImageUrl = "product-9.jpg"
                        },
                        new
                        {
                            Id = 10,
                            BookId = 10,
                            ImageUrl = "product-10.jpg"
                        },
                        new
                        {
                            Id = 11,
                            BookId = 1,
                            ImageUrl = "product-11.jpg"
                        },
                        new
                        {
                            Id = 12,
                            BookId = 2,
                            ImageUrl = "product-12.jpg"
                        },
                        new
                        {
                            Id = 13,
                            BookId = 3,
                            ImageUrl = "product-13.jpg"
                        },
                        new
                        {
                            Id = 14,
                            BookId = 4,
                            ImageUrl = "product-details-1.jpg"
                        },
                        new
                        {
                            Id = 15,
                            BookId = 5,
                            ImageUrl = "product-details-2.jpg"
                        },
                        new
                        {
                            Id = 16,
                            BookId = 6,
                            ImageUrl = "product-details-3.jpg"
                        },
                        new
                        {
                            Id = 17,
                            BookId = 7,
                            ImageUrl = "product-details-4.jpg"
                        },
                        new
                        {
                            Id = 18,
                            BookId = 8,
                            ImageUrl = "product-details-5.jpg"
                        });
                });

            modelBuilder.Entity("Pustok.App.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mystery"
                        });
                });

            modelBuilder.Entity("Pustok.App.Models.Slider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ButtonLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ButtonText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Sliders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ButtonLink = "/books",
                            ButtonText = "Shop Now",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Best books available!",
                            ImageUrl = "product-1.jpg",
                            Order = 1,
                            Title = "Welcome to Pustok"
                        },
                        new
                        {
                            Id = 2,
                            ButtonLink = "/books/new",
                            ButtonText = "View New",
                            CreatedAt = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Check out the latest books!",
                            ImageUrl = "product-2.jpg",
                            Order = 2,
                            Title = "New Arrivals"
                        },
                        new
                        {
                            Id = 3,
                            ButtonLink = "/books/bestsellers",
                            ButtonText = "See Bestsellers",
                            CreatedAt = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Our most popular books!",
                            ImageUrl = "product-3.jpg",
                            Order = 3,
                            Title = "Best Sellers"
                        });
                });

            modelBuilder.Entity("Pustok.App.Models.Book", b =>
                {
                    b.HasOne("Pustok.App.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pustok.App.Models.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Pustok.App.Models.BookImage", b =>
                {
                    b.HasOne("Pustok.App.Models.Book", "Book")
                        .WithMany("BookImages")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Pustok.App.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Pustok.App.Models.Book", b =>
                {
                    b.Navigation("BookImages");
                });

            modelBuilder.Entity("Pustok.App.Models.Genre", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
